# CUGA Tool Integration Configuration
# This file demonstrates three types of tool integrations:
# 1. OpenAPI Tools (REST APIs)
# 2. MCP Tools (Model Context Protocol) with multiple transport types

# ============================================
# 1. OpenAPI Tools (Legacy Services Format)
# ============================================
services:
  - digital_sales:
      url: https://digitalsales.19pc1vtv090u.us-east.codeengine.appdomain.cloud/openapi.json
      description: This Digital Sales Skills API provides sales professionals with a unified interface to access territory accounts, retrieve client information from TPP, manage job roles, and synchronize contacts between Zoominfo and Salesloftâ€”streamlining the process of managing customer relationships and sales data across multiple platforms.

# ============================================
# 2. MCP Servers with Transport Types
# ============================================
# Supports three transport types:
# - stdio: Local command-based servers (default for commands)
# - sse: Server-Sent Events (legacy, auto-detected from /sse in URL)
# - http: Streamable HTTP (recommended for production)

mcpServers:
  # STDIO Transport - Local file system operations
  filesystem:
    command: npx
    args: ["-y", "@modelcontextprotocol/server-filesystem", "./cuga_workspace"]
    transport: stdio  # Optional: auto-detected when command is present
    description: Standard file system operations for workspace management
    env:
      LOG_LEVEL: INFO  # Environment variables for STDIO transport

# Additional MCP Server Examples:

# HTTP Transport (Recommended for production)
# mcpServers:
#   digital_sales_mcp:
#     url: https://<your-mcp-server-url>/mcp
#     transport: http
#     description: Production Digital Sales MCP server with HTTP transport

# SSE Transport (Legacy)
# mcpServers:
#   digital_sales_sse:
#     url: https://digitalsales-mcp.19pc1vtv090u.us-east.codeengine.appdomain.cloud/sse
#     transport: sse  # Optional: auto-detected from /sse in URL
#     description: Digital Sales MCP server with SSE transport

# Local Python STDIO server
# mcpServers:
#   local_python_server:
#     command: python
#     args: ["./fast_mcp_example.py"]
#     transport: stdio
#     env:
#       DEBUG: "true"
#       API_KEY: your_key_here
#     description: Local Python MCP server example